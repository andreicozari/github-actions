
K8s:
kubectl apply -f welcome-to-k8s.yaml
kubectl get pods
kubectl logs pod-name
kubectl describe pod welcome-to-docker-6f468f6cc7-5xnq
kubectl scale deployment hi-k8s --replicas=0

kubectl apply -f .\first-k8s-service.yaml
kubectl get svc nodejs-service

http://10.107.95.178:80

kubectl delete service nodejs-service

see all service:
kubectl get svc

Port forwarding in k8s is just for debuging, testing and troubleshooting issues in a pod. Connect to a pod from local computer.
kubectl port-forward pod/nodeapp-deployment-8677777c6b-8j7jg 8080:80

Kubernetes is a popular container orchestration platform for deploying and managing containerized applications. When you deploy a containerized application to a Kubernetes cluster, it runs inside a Pod. By default, Pods are not exposed to the public internet. If you want to make the application running inside the Pod accessible from outside the Kubernetes cluster, you need to create a Service object.

However, there are scenarios where you might not want to expose your application to the external world using a Service for security reasons. For example, when you want to do some debugging or test the application locally. This is where "kubectl port-forward" comes into the picture.

https://kodekloud.com/blog/port-forwarding-kubernetes/

Remember that the terminal session where the "kubectl port-forward" command is running must remain open for the port forwarding to continue working. If you close the terminal session, the connection between your local machine and the Pod running the "nginx" web server will be lost, and you won't be able to access the "nginx" web server anymore. If you want to continue working on the Kubernetes cluster while maintaining the open connection created by the "kubectl port-forward" command, you should open another terminal window and execute your commands on it.
